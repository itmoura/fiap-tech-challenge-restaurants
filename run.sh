#!/bin/bash

# Script para executar o projeto Tech Challenge Restaurants

echo "=== Tech Challenge - Sistema de Gest√£o de Restaurantes ==="
echo ""

# Fun√ß√£o para mostrar ajuda
show_help() {
    echo "Uso: ./run.sh [COMANDO]"
    echo ""
    echo "Comandos dispon√≠veis:"
    echo "  start     - Inicia a aplica√ß√£o com Docker Compose"
    echo "  stop      - Para a aplica√ß√£o"
    echo "  restart   - Reinicia a aplica√ß√£o"
    echo "  logs      - Mostra os logs da aplica√ß√£o"
    echo "  test      - Executa os testes"
    echo "  build     - Faz o build da aplica√ß√£o"
    echo "  clean     - Limpa containers e volumes"
    echo "  help      - Mostra esta ajuda"
    echo ""
}

# Fun√ß√£o para iniciar a aplica√ß√£o
start_app() {
    echo "üöÄ Iniciando a aplica√ß√£o..."
    docker-compose up -d
    echo ""
    echo "‚úÖ Aplica√ß√£o iniciada com sucesso!"
    echo ""
    echo "üìã Servi√ßos dispon√≠veis:"
    echo "   ‚Ä¢ API: http://localhost:8081"
    echo "   ‚Ä¢ Swagger UI: http://localhost:8081/swagger-ui.html"
    echo "   ‚Ä¢ Health Check: http://localhost:8081/actuator/health"
    echo "   ‚Ä¢ MongoDB: localhost:27017"
    echo ""
    echo "üìä Para ver os logs: ./run.sh logs"
}

# Fun√ß√£o para parar a aplica√ß√£o
stop_app() {
    echo "üõë Parando a aplica√ß√£o..."
    docker-compose down
    echo "‚úÖ Aplica√ß√£o parada com sucesso!"
}

# Fun√ß√£o para reiniciar a aplica√ß√£o
restart_app() {
    echo "üîÑ Reiniciando a aplica√ß√£o..."
    docker-compose down
    docker-compose up -d
    echo "‚úÖ Aplica√ß√£o reiniciada com sucesso!"
}

# Fun√ß√£o para mostrar logs
show_logs() {
    echo "üìã Mostrando logs da aplica√ß√£o..."
    docker-compose logs -f app
}

# Fun√ß√£o para executar testes
run_tests() {
    echo "üß™ Executando testes..."
    export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
    ./gradlew test
    echo "‚úÖ Testes executados!"
}

# Fun√ß√£o para fazer build
build_app() {
    echo "üî® Fazendo build da aplica√ß√£o..."
    export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
    ./gradlew build
    echo "‚úÖ Build conclu√≠do!"
}

# Fun√ß√£o para limpeza
clean_app() {
    echo "üßπ Limpando containers e volumes..."
    docker-compose down -v
    docker system prune -f
    echo "‚úÖ Limpeza conclu√≠da!"
}

# Verificar comando
case "$1" in
    start)
        start_app
        ;;
    stop)
        stop_app
        ;;
    restart)
        restart_app
        ;;
    logs)
        show_logs
        ;;
    test)
        run_tests
        ;;
    build)
        build_app
        ;;
    clean)
        clean_app
        ;;
    help|--help|-h)
        show_help
        ;;
    "")
        echo "‚ùå Nenhum comando especificado."
        echo ""
        show_help
        ;;
    *)
        echo "‚ùå Comando '$1' n√£o reconhecido."
        echo ""
        show_help
        exit 1
        ;;
esac
