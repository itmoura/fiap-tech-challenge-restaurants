name: 📚 Deploy Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'web-docs/**'
      - '.github/workflows/deploy-static-docs.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy-documentation:
    name: 🚀 Deploy HTML Documentation
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔍 Verify Documentation Structure
        run: |
          echo "🔍 Checking web-docs structure..."
          ls -la web-docs/
          
          echo "📄 Checking required files..."
          if [ -f "web-docs/index.html" ]; then
            echo "✅ index.html found"
          else
            echo "❌ index.html not found"
            exit 1
          fi
          
          if [ -d "web-docs/css" ]; then
            echo "✅ CSS directory found"
          else
            echo "❌ CSS directory not found"
            exit 1
          fi
          
          if [ -d "web-docs/js" ]; then
            echo "✅ JS directory found"
          else
            echo "❌ JS directory not found"
            exit 1
          fi
          
          if [ -d "web-docs/pages" ]; then
            echo "✅ Pages directory found"
            echo "📋 Available pages:"
            ls -1 web-docs/pages/ | head -10
          else
            echo "❌ Pages directory not found"
            exit 1
          fi

      - name: 📊 Generate Documentation Stats
        run: |
          echo "📊 Documentation Statistics"
          echo "=========================="
          echo "📄 Total HTML files: $(find web-docs -name "*.html" | wc -l)"
          echo "🎨 CSS files: $(find web-docs -name "*.css" | wc -l)"
          echo "⚡ JS files: $(find web-docs -name "*.js" | wc -l)"
          echo "📁 Total size: $(du -sh web-docs | cut -f1)"
          echo "=========================="

      - name: 🔧 Optimize Files
        run: |
          echo "🔧 Optimizing documentation files..."
          
          # Remove any .DS_Store files (macOS)
          find web-docs -name ".DS_Store" -delete || true
          
          # Remove any backup files
          find web-docs -name "*.bak" -delete || true
          find web-docs -name "*~" -delete || true
          
          echo "✅ Optimization completed"

      - name: 🚀 Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: 📤 Upload Documentation Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./web-docs

      - name: 🌐 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: 🔍 Post-Deploy Validation
        run: |
          echo "🔍 Validating deployment..."
          
          # Wait a moment for deployment to propagate
          sleep 30
          
          SITE_URL="${{ steps.deployment.outputs.page_url }}"
          echo "🌐 Site URL: $SITE_URL"
          
          # Basic connectivity test
          if curl -f -s "$SITE_URL" > /dev/null; then
            echo "✅ Site is accessible"
          else
            echo "⚠️ Site may not be immediately accessible (normal for first deploy)"
          fi

      - name: 📢 Deployment Success
        run: |
          echo "🎉 HTML documentation deployed successfully!"
          echo ""
          echo "📊 Deployment Summary:"
          echo "======================"
          echo "🔗 Live URL: ${{ steps.deployment.outputs.page_url }}"
          echo "📅 Deployed at: $(date)"
          echo "🔄 Commit: ${{ github.sha }}"
          echo "🌿 Branch: ${{ github.ref_name }}"
          echo "👤 Triggered by: ${{ github.actor }}"
          echo ""
          echo "📚 Available Sections:"
          echo "• 🏠 Home - Overview and quick start"
          echo "• 📋 Installation - Prerequisites and setup"
          echo "• 📚 API Reference - Complete endpoint documentation"
          echo "• 🏗️ Architecture - System design and patterns"
          echo "• 👤 About - Author and license information"
          echo ""
          echo "🎯 Features:"
          echo "• 🌙 Dark mode AWS-style design"
          echo "• 📱 Responsive mobile-friendly layout"
          echo "• 🔍 Interactive navigation sidebar"
          echo "• 📋 Copy-to-clipboard code blocks"
          echo "• ⚡ Fast loading static HTML"
          echo ""
          echo "🔧 This is now the ONLY documentation workflow"
          echo "• MkDocs workflows have been removed"
          echo "• Only HTML static documentation is deployed"
          echo "• Faster, more reliable, and easier to maintain"

  # Notification job for failures
  notify-failure:
    name: 📢 Notify Failure
    runs-on: ubuntu-latest
    needs: deploy-documentation
    if: failure()
    
    steps:
      - name: ❌ Deployment Failed
        run: |
          echo "❌ Documentation deployment failed!"
          echo ""
          echo "🔍 Possible causes:"
          echo "• Missing required files (index.html, CSS, JS)"
          echo "• Invalid HTML structure"
          echo "• GitHub Pages configuration issues"
          echo "• File size or count limits exceeded"
          echo ""
          echo "🛠️ Troubleshooting steps:"
          echo "1. Check the job logs above for specific errors"
          echo "2. Verify all files exist in web-docs directory"
          echo "3. Test HTML files locally before pushing"
          echo "4. Ensure GitHub Pages is enabled in repository settings"
          echo ""
          echo "📞 If issues persist:"
          echo "• Check GitHub Pages status: https://www.githubstatus.com/"
          echo "• Verify repository permissions and settings"
          echo "• Try manual deployment via Actions tab"
